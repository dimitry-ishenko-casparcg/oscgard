////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020-2021 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef SRC_SYSTEM_HPP
#define SRC_SYSTEM_HPP

////////////////////////////////////////////////////////////////////////////////
#include <filesystem>
#include <functional>
#include <string>
#include <vector>

namespace fs = std::filesystem;

////////////////////////////////////////////////////////////////////////////////
namespace src
{

////////////////////////////////////////////////////////////////////////////////
using pid_t = ::pid_t;

pid_t fork();

////////////////////////////////////////////////////////////////////////////////
void exec(const fs::path&, const std::vector<std::string>&);

////////////////////////////////////////////////////////////////////////////////
using child_exit_callback = std::function<void (pid_t, int)>;
void on_child_exit(child_exit_callback);

////////////////////////////////////////////////////////////////////////////////
using interrupt_callback = std::function<void (int)>;
void on_interrupt(interrupt_callback);

////////////////////////////////////////////////////////////////////////////////
fs::path data_path();

bool is_root();

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif
